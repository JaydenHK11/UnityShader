Shader "Custom/ClearSkyShader"
{
    Properties
    {
        _SkyTexture ("Skybox Texture", CUBE) = "" {}
        _Exposure ("Exposure", Range(0.1, 10)) = 1.0
    }
    
    SubShader
    {
        Tags { "Queue" = "Background" }
        Pass
        {
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            #include "UnityCG.cginc"

            struct appdata_t
            {
                float4 vertex : POSITION;
            };

            struct v2f
            {
                float4 pos : TEXCOORD0;
                float3 viewDir : TEXCOORD1;
            };

            float4x4 _SkyMatrix;
            float _Exposure;

            v2f vert (appdata_t v)
            {
                v2f o;
                o.pos = mul(UNITY_MATRIX_MVP, v.vertex);
                o.viewDir = normalize(mul((float3x3)_SkyMatrix, v.vertex.xyz));
                return o;
            }

            half4 frag (v2f i) : SV_Target
            {
                // 计算天空盒颜色
                half3 skyColor = texCUBE(_SkyTexture, i.viewDir).rgb;

                // 应用曝光
                skyColor *= _Exposure;

                return half4(skyColor, 1.0);
            }
            ENDCG
        }
    }
}
